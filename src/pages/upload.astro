---
export const prerender = false;

import slugify from 'slugify';
import { fileTypeFromBlob } from 'file-type';
import { gallery } from '../libs/stores';

import Fullscreen from '../layouts/Fullscreen.astro';
import TextField from '@components/TextField.astro';

if (Astro.request.method === 'POST') {
	try {
		const formData = await Astro.request.formData();
		const file = formData.get('file') as File;
		const uuid = Date.now().toString();

		// Check if photo already exists
		const key = slugify(uuid, { lower: true });

		if (await gallery.get(key)) {
			return new Response('Photo already exists.', { status: 400 });
		}

		// Check if file type is valid
		const fileType = await fileTypeFromBlob(file);

		if (fileType?.ext && !['jpg', 'jpeg', 'png', 'gif', 'webp', 'avif'].includes(fileType.ext)) {
			return new Response('Invalid file type.', { status: 400 });
		}

		await gallery.set(uuid, file, { metadata: fileType });
	} catch (error) {
		console.error(error);
	}
}
---

<Fullscreen title="Welcome to Astro.">
	<form method="POST" enctype="multipart/form-data">
		<label class="upload-area">
			<img id="upload-img" src="" alt="Astro logo" />
			<input id="upload-input" class="visually-hidden" type="file" name="file" required />
		</label>
		<TextField label="Alternative text" name="alt" required />
		<button>Submit</button>
	</form>
</Fullscreen>

<style>
	.upload-area {
		/* background: #555; */
		border: dashed 2px #fff;
		border-radius: 8px;
		display: flex;
		width: 100%;
	}

	/* custom 404 image */

	img {
		/* Same as first example */
	}

	img:before {
		content: ' ';
		display: block;
		height: 100%;
	}

	img:after {
		content: '\f127' ' Broken Image of ' attr(alt);
		display: block;
		font-size: 16px;
		font-style: normal;
		font-family: FontAwesome;
		color: rgb(100, 100, 100);

		position: absolute;
		top: 5px;
		left: 0;
		width: 100%;
		text-align: center;
	}
</style>

<script>
	const input = document.querySelector('#upload-input') as HTMLInputElement;
	const outputImg = document.querySelector('#upload-img') as HTMLImageElement;

	if (!input || !outputImg) return;

	input.addEventListener('change', function () {
		const file = input.files?.[0];
		const reader = new FileReader();

		reader.onload = function (e) {
			if (e.target) outputImg.src = e.target.result as string;
		};

		if (file) reader.readAsDataURL(file);
	});
</script>
