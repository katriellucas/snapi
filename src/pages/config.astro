---
import { validSession } from '../libs/session';
import { profileUpdateForm, uploadPhotoForm, deployForm } from '../libs/forms';

import Layout from '../layouts/Logged.astro';
import CommonButton from '@components/CommonButton.astro';
import Dialog from '@components/Dialog.astro';
import UploadArea from '@components/UploadArea.astro';
import { Icon } from 'astro-icon/components';
let error;
const session = Astro.cookies.get('session')?.value;
const sessionValid = await validSession(session);

if (!sessionValid) {
	Astro.cookies.delete('session');
	return Astro.redirect('/login');
}

const action = Astro.url.searchParams.get('action');
const alert = Astro.url.searchParams.get('alert');
let result;

if (Astro.request.method === 'POST') {
	if (!sessionValid) return 'Invalid session.';

	const formData = await Astro.request.formData();

	switch (action) {
		case 'profile-update':
			result = await profileUpdateForm(formData);
			return Astro.redirect('/config?alert=' + result);
		case 'upload-photo':
			result = await uploadPhotoForm(formData);
			return Astro.redirect('/config?alert=' + result);
		case 'deploy':
			result = await deployForm();
			return Astro.redirect('/config?alert=' + result);
		default:
			break;
	}
}
console.log(action);
---

<Layout title="Configuration">
	{
		alert && (
			<div class="alert">
				<Icon class="alert-icon" name="tabler:alert-square-rounded" width={24} height={24} />
				{decodeURIComponent(alert)}
			</div>
		)
	}
	{
		action === 'deploy' && (
			<Dialog centered href="config">
				<div class="form-card">
					<h1>Update your Snapi?</h1>
					<p>Any changes you have done onyour profile or gallery will be available online.</p>
					<form class="form-card-footer" method="post" action="?action=deploy">
						<CommonButton href="config">Cancel</CommonButton>
						<CommonButton primary>Deploy</CommonButton>
					</form>
				</div>
			</Dialog>
		)
	}
	{
		action === 'upload-photo' && (
			<Dialog href="config">
				<UploadArea />
			</Dialog>
		)
	}
</Layout>

<style>
	h1 {
		font: var(--title-large);
	}

	.centered-container {
		align-items: center;
		display: flex;
		height: 100%;
		justify-content: center;
		width: 100%;
	}

	.form-card {
		background: var(--outline); /* maybe change */
		border-radius: 12px;
		display: flex;
		flex-direction: column;
		gap: 16px;
		max-width: 480px;
		padding: 24px;
		width: 100%;
	}

	.form-card-footer {
		display: flex;
		justify-content: flex-end;
		gap: 8px;
	}

	.alert {
		align-items: center;
		background: var(--outline);
		border-radius: var(--corner-16);
		display: flex;
		font: var(--body-large);
		gap: 12px;
		padding: 16px;
	}

	.alert-icon {
		min-height: 24x;
		min-width: 24x;
	}
</style>
