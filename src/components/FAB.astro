---
import { Icon } from 'astro-icon/components';

interface Props {
	href?: string;
	icon: string;
	iconAttr?: object;
	// onclick?: (...args: any) => unknown;
	target?: '_blank' | '_self' | '_parent' | '_top';
	type?: 'button' | 'reset' | 'submit';
	visual?: 'filled' | 'outline' | 'standard' | 'tonal';
}

const { href, icon, iconAttr, ...props } = Astro.props;

const El = href ? 'a' : 'button';
---

<El class="fab target ripple" {href} {...props}>
	<span class="container">
		<Icon name={icon} {...iconAttr} width={24} height={24} />
	</span>
</El>

<!-- {href ? (
	<a class="fab target ripple {size} {visual}" {target}  {hre class:extended={label}>
		<Icon {icon} />
		{label}
	</a>
) : (
	<button class="fab target ripple {size} {visual}" {onclick} {type} class:extended={label}>
		<Icon {icon} />
		{#if label}<span class="label">{label}</span>{/if}
	</button>
)} -->

<style lang="scss">
	.fab {
		align-items: center;
		box-shadow: var(--elevation, none);
		cursor: pointer;
		display: inline-flex;
		font: var(--label-large);

		justify-content: center;

		:global(.iconify) {
			height: 24px;
			width: 24px;
		}
	}

	// SIZE OPTIONS üìè
	.small {
		border-radius: var(--corner-medium);
		height: 40px;
		width: 40px;
	}

	.medium {
		border-radius: var(--corner-large);
		height: 56px;
		width: 56px;
	}

	.large {
		border-radius: var(--corner-extra-large);
		height: 96px;
		width: 96px;

		:global(.iconify) {
			height: 36px;
			width: 36px;
		}
	}

	// COLORS OPTIONS üé®
	.primary {
		background: var(--primary);
		color: var(--on-primary);
	}

	.secondary {
		background: var(--secondary);
		color: var(--on-secondary);
	}

	.tertiary {
		background: var(--tertiary);
		color: var(--on-tertiary);
	}

	.surface {
		background: var(--surface-container-high);
		color: var(--primary);
	}

	.extended {
		height: 56px;
		min-width: 80px;
		padding: 0 16px;
		width: auto;

		:global(.iconify) {
			margin-right: 12px;
		}
	}
</style>
