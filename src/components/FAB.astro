---

	let {
		href,
		icon,
		label,
		multiple,
		onclick,
		target,
		type = 'button',
		visual
	}: FAB = $props();
---
{href ? (
	<a class="fab target ripple {size} {visual}" {target} {onclick} {href} class:extended={label}>
		<Icon {icon} />
		{label}
	</a>
) : (
	<button class="fab target ripple {size} {visual}" {onclick} {type} class:extended={label}>
		<Icon {icon} />
		{#if label}<span class="label">{label}</span>{/if}
	</button>
)}

<style lang="scss">
	.fab {
		align-items: center;
		box-shadow: var(--elevation, none);
		cursor: pointer;
		display: inline-flex;
		justify-content: center;

		:global(.iconify) {
			height: 24px;
			width: 24px;
		}
	}

	.label {
		font: var(--label-large);
	}

	// SIZE OPTIONS üìè
	.small {
		border-radius: var(--corner-medium);
		height: 40px;
		width: 40px;
	}

	.medium {
		border-radius: var(--corner-large);
		height: 56px;
		width: 56px;
	}

	.large {
		border-radius: var(--corner-extra-large);
		height: 96px;
		width: 96px;

		:global(.iconify) {
			height: 36px;
			width: 36px;
		}
	}

	// COLORS OPTIONS üé®
	.primary {
		background: var(--primary);
		color: var(--on-primary);
	}

	.secondary {
		background: var(--secondary);
		color: var(--on-secondary);
	}

	.tertiary {
		background: var(--tertiary);
		color: var(--on-tertiary);
	}

	.surface {
		background: var(--surface-container-high);
		color: var(--primary);
	}

	.extended {
		height: 56px;
		min-width: 80px;
		padding: 0 16px;
		width: auto;

		:global(.iconify) {
			margin-right: 12px;
		}
	}
</style>
