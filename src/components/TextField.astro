---
interface Props {
	errorText?: string;
	label: string;
	required?: boolean;
	name: string;
	value?: string;
}

const { errorText, label, ...props } = Astro.props;
---

<div class="field-container">
	<span class="label"> {label}</span>
	<label class="text-field">
		<input {...props} />
	</label>
	<div class="error-text">{errorText}</div>
</div>

<style>
	.field-container {
		display: flex;
		flex-direction: column;
		width: 100%;
	}
	.text-field {
		align-items: center;
		border-radius: 4px;
		box-shadow: inset 0 0 0 1px var(--on-bg-alt);
		caret-color: var(--accent);
		display: flex;
		font: var(--body-large);

		height: 56px;
		padding: 0 12px;
		position: relative;
		transition: box-shadow 0.2s;
		width: 100%;
	}

	.text-field:hover {
		box-shadow: inset 0px 0px 0px 2px var(--accent);
	}

	.text-field:focus-within,
	.text-field:active {
		box-shadow: inset 0px 0px 0px 2px var(--accent);
	}

	input {
		all: unset;
		cursor: text;
		height: 100%;
		left: 0;
		padding: 0 16px;
		position: absolute;
		top: 0;
		width: 100%;
	}

	input::placeholder {
		color: transparent;
		user-select: none;
	}

	input:autofill,
	input:-webkit-autofill {
		background-clip: text;
		-webkit-text-fill-color: var(--on-surface);
	}

	.label {
		color: var(--accent);
		font: var(--label-large);
		margin-bottom: 4px;
	}

	.error-text {
		color: var(--error);
		font: var(--body-small);
		margin: 4px 16px 0;
	}
</style>
