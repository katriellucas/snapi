---
interface Props {
	href?: string;
	target?: '_blank' | '_self' | '_parent' | '_top';
	type?: 'button' | 'reset' | 'submit';
	wide?: boolean;
	primary?: boolean;
	danger?: boolean;
	rainbow?: boolean;
	style?: any;
	name?: string;
	value?: string | null;
}

const { href, wide, primary, danger, rainbow, ...props } = Astro.props;

const El = href ? 'a' : 'button';
---

<El class:list={['common-button target', { wide, rainbow }]} {...props} {href}>
	<span class:list={['container ripple', { primary, danger }]}>
		<slot />
	</span>
</El>

<style>
	.common-button {
		align-items: center;
		cursor: pointer;
		display: flex;
		height: 48px;
		padding: 4px;
		justify-content: center;
		overflow: hidden;
		border-radius: 10px;
		position: relative;
	}

	.rainbow:before {
		content: '';
		height: 200%;
		width: 200%;
		position: absolute;
		background: conic-gradient(#fd004c, #fe9000, #fff020, #3edf4b, #3363ff, #b102b7, #fd004c);
		animation: spin 1.5s infinite linear;
	}

	.container {
		align-items: center;
		border-radius: 8px;
		color: var(--on-bg);
		display: flex;
		font: var(--title-medium);

		height: 40px;
		justify-content: center;
		padding: 0 16px;
		width: 100%;
	}

	.primary {
		background: var(--accent);
		color: var(--on-accent);
	}

	.danger {
		color: var(--error);
	}

	.wide {
		width: 100%;
	}

	@keyframes spin {
		100% {
			transform: rotate(-360deg);
		}
	}
</style>
