---
import TextField from '@components/TextField.astro';
import IconButton from '@components/IconButton.astro';

interface Props {
	image?: string;
	action: string;
}

const { action, image } = Astro.props;
---

<form method="POST" enctype="multipart/form-data" {action}>
	<label class="upload-area target ripple">
		<img id="snapi-img" src={image} alt="Image to upload" />
		<input
			id="snapi-input"
			class="visually-hidden no-js"
			type="file"
			name="file"
			accept="image/jpeg, image/png, image/gif, image/webp, image/avif"
			required
		/>
	</label>
	<div class="card">
		<TextField label="Description for screen readers" name="alt" required />
		<IconButton primary style={{ marginBottom: '8px' }} icon="tabler:upload" />
	</div>
</form>

<style>
	form {
		width: 100%;
		height: 100%;
	}

	.upload-area {
		border-radius: 16px;
		cursor: pointer;

		display: flex;
		width: 100%;
		height: calc(100% - 136px);
		overflow: hidden;
	}

	#snapi-img {
		width: 100%;
		height: 100%;
		object-fit: contain; /* Ensure the image is contained within its dimensions */
	}

	img {
		background: var(--outline);
		position: relative;
	}

	img::before {
		content: '';
		width: 100%;
		height: 100%;
		background: var(--outline);
		position: absolute;
		top: 0;
		left: 0;
	}

	img::after {
		font-size: 18px;
		color: rgb(100, 100, 100);

		display: block;
		position: absolute;
		z-index: 2;
		top: 5px;
		left: 0;
		width: 100%;
		height: 100%;
	}

	.card {
		align-items: end;
		background: var(--outline);
		border-radius: var(--corner-16);
		display: flex;
		column-gap: 12px;
		margin-top: 16px;
		padding: 16px;
	}
</style>

<script is:inline>
	if (!window.snapiInput) {
		let snapiInput = document.querySelector('#snapi-input');
		let snapiImg = document.querySelector('#snapi-img');

		if (snapiInput || snapiImg) {
			snapiInput.addEventListener('change', function () {
				const file = snapiInput.files?.[0];
				const reader = new FileReader();

				reader.onload = function (e) {
					if (e.target) snapiImg.src = e.target.result;
				};

				if (file) reader.readAsDataURL(file);
			});
		}
	}
</script>

<noscript>
	<style>
		.no-js {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			clip: auto; /* Reset clip property */
			clip-path: none; /* Reset clip-path property */
			height: auto; /* Reset height property */
			overflow: visible; /* Reset overflow property */
			white-space: normal; /* Reset white-space property */
			width: auto; /* Reset width property */
		}
	</style>
</noscript>
