---
import { Icon } from 'astro-icon/components';

interface Props {
	href?: string;
	icon: string;
	iconAttr?: object;
	// onclick?: (...args: any) => unknown;
	target?: '_blank' | '_self' | '_parent' | '_top';
	type?: 'button' | 'reset' | 'submit';
	visual?: 'filled' | 'outline' | 'standard' | 'tonal';
}

const { href, icon, iconAttr, ...props } = Astro.props;

const El = href ? 'a' : 'button';
---

<El class="icon-button target" {...props} {href}>
	<span class="container ripple {visual}">
		<Icon name={icon} {...iconAttr} width={24} height={24} />
	</span>
</El>

<style>
	.icon-button {
		align-items: center;
		border-radius: var(--corner-full);
		display: inline-flex;
		height: 48px;
		justify-content: center;
		width: 48px;
	}

	.container {
		align-items: center;
		border-radius: var(--corner-full);
		color: currentcolor;
		display: flex;
		height: 40px;
		justify-content: center;
		width: 40px;
	}

	// COLORS OPTIONS ðŸŽ¨

	.filled {
		background: var(--primary);
		color: var(--on-primary);
	}

	.outline {
		border: 1px solid var(--outline);
		color: var(--on-surface-variant);
	}

	.standard {
		color: var(--on-surface-variant);
	}

	.tonal {
		background: var(--secondary-container);
		color: var(--on-secondary-container);
	}

	.checked {
		color: var(--primary);
	}
</style>
