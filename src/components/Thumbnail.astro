---
import { Picture } from 'astro:assets';

interface Props {
	key: string;
	alt?: any;
	image?: any;
}

const { key, alt, image } = Astro.props;

if (key === 'profile') return;

const photomap = await fetch(Astro.url.origin + '/data/photomap.json')
	.then(res => res.json())
	.catch(err => console.error(err));

let photo = photomap.find((photo: any) => photo.key === key) as any;

if (photo === undefined) return;

// const { metadata } = (await gallery.getMetadata(key)) ?? {};

// console.log(key, alt, image);

// const { metadata } = (await gallery.getMetadata(key)) ?? {};
// console.log(key, metadata?.ext, '<- here');
// const i = await photoList[`/src/gallery/${key}.${alt?.ext}`]();
// console.log(photoList, 'photo');

// console.log(metadata);

// const image = photoList[`/src/gallery/${key}.${metadata}.avif`]();

// console.log(image, 'image');
---

<a href={`?photo=${photo.key}`} id={photo.key} class="thumbnail target ripple">
	<Picture
		class="photo"
		src={photo.image}
		alt={photo.metadata.alt}
		formats={['avif', 'webp']}
		sizes={`(max-width: 415px) 240px, (max-width: 1200px) 400px`}
		widths={[240, 400]}
	/>
</a>
<slot />

<style>
	.thumbnail {
		border-radius: 8px;
		cursor: pointer;
		overflow: hidden;
		position: relative;
	}

	.photo {
		aspect-ratio: 1 / 1;
		display: block;
		height: auto;
		width: 100%;
		object-fit: cover;
		overflow: hidden;
		position: relative;
	}

	.chip {
		background: var(--accent);
		border-radius: var(--corner-16);
		color: var(--on-accent);
		display: inline-flex;
		font: var(--label-medium);
		padding: 4px 8px;
		user-select: none;
		pointer-events: none;
		position: absolute;
		top: 16px;
		right: 16px;
	}
</style>
